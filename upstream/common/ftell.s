;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"65816"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "ftell.c", 921, 1084485241
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stdio.h", 5951, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stddef.h", 2972, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stdarg.h", 2817, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/errno.h", 4695, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/unistd.h", 4203, 1344797532
	.dbg		file, "_file.h", 742, 1084367796
	.dbg		sym, "_errno", "00", extern, "__errno"
	.dbg		sym, "lseek", "00", extern, "_lseek"
	.export		_ftell
	.import		__errno
	.import		_lseek

; ---------------------------------------------------------------
; long __near__ __fastcall__ ftell (register __near__ struct _FILE*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ftell: near

	.dbg	func, "ftell", "00", extern, "_ftell"
	.dbg	sym, "f", "00", register, "regbank", 4
	.dbg	sym, "pos", "00", auto, -4

.segment	"CODE"

;
; {
;
	.dbg	line, "ftell.c", 24
	jsr     pushax
	ldy     #$00
	ldx     #$04
	jsr     regswap2
;
; if ((f->f_flags & _FOPEN) == 0) {
;
	.dbg	line, "ftell.c", 28
	jsr     decsp4
	ldy     #$01
	lda     (regbank+4),y
	and     #$01
	bne     L0003
;
; _errno = EINVAL;                /* File not open */
;
	.dbg	line, "ftell.c", 29
	lda     #$07
	sta     __errno
	stz     __errno+1
;
; return -1L;
;
	.dbg	line, "ftell.c", 30
	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	bra     L0002
;
; pos = lseek (f->f_fd, 0L, SEEK_CUR);
;
	.dbg	line, "ftell.c", 34
L0003:	jsr     decsp6
	lda     (regbank+4)
	ldy     #$04
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	tax
	sta     (sp)
	ldy     #$01
	sta     (sp),y
	iny
	sta     (sp),y
	iny
	sta     (sp),y
	jsr     _lseek
	jsr     steax0sp
;
; if (pos > 0 && (f->f_flags & _FPUSHBACK)) {
;
	.dbg	line, "ftell.c", 39
	jsr     ldeax0sp
	jsr     pusheax
	ldx     #$00
	stz     sreg
	stz     sreg+1
	lda     #$01
	jsr     tosgeeax
	beq     L000F
	ldy     #$01
	lda     (regbank+4),y
	and     #$08
	beq     L000F
;
; --pos;
;
	.dbg	line, "ftell.c", 40
	ldx     #$00
	tya
	jsr     lsubeq0sp
;
; return pos;
;
	.dbg	line, "ftell.c", 44
L000F:	jsr     ldeax0sp
;
; }
;
	.dbg	line, "ftell.c", 45
L0002:	pha
	ldy     #$04
	lda     (sp),y
	sta     regbank+4
	iny
	lda     (sp),y
	sta     regbank+5
	pla
	jmp     incsp6
	.dbg	line

.endproc

