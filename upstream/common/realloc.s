;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"65816"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "realloc.c", 4656, 1103497778
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stdlib.h", 5606, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/string.h", 4883, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stddef.h", 2972, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/_heap.h", 1145, 1344797532
	.dbg		sym, "malloc", "00", extern, "_malloc"
	.dbg		sym, "free", "00", extern, "_free"
	.dbg		sym, "memcpy", "00", extern, "_memcpy"
	.dbg		sym, "_heapptr", "00", extern, "__heapptr"
	.dbg		sym, "_heapend", "00", extern, "__heapend"
	.import		_malloc
	.export		_realloc
	.import		_free
	.import		_memcpy
	.import		__heapptr
	.import		__heapend

; ---------------------------------------------------------------
; __near__ void* __near__ __fastcall__ realloc (__near__ void*, unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_realloc: near

	.dbg	func, "realloc", "00", extern, "_realloc"
	.dbg	sym, "block", "00", auto, 2
	.dbg	sym, "size", "00", auto, 0
	.dbg	sym, "b", "00", auto, -2
	.dbg	sym, "newblock", "00", auto, -4
	.dbg	sym, "oldsize", "00", auto, -6
	.dbg	sym, "newhptr", "00", auto, -8
	.dbg	sym, "diff", "00", auto, -10

.segment	"CODE"

;
; {
;
	.dbg	line, "realloc.c", 43
	jsr     pushax
;
; if (!block) {
;
	.dbg	line, "realloc.c", 51
	ldy     #$0A
	jsr     subysp
	ldy     #$0D
	lda     (sp),y
	dey
	ora     (sp),y
	bne     L0002
;
; return malloc (size);
;
	.dbg	line, "realloc.c", 53
	dey
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _malloc
	jmp     L0001
;
; if (size == 0) {
;
	.dbg	line, "realloc.c", 57
L0002:	ldy     #$0A
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L0006
;
; free (block);
;
	.dbg	line, "realloc.c", 59
	ldy     #$0D
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _free
;
; return 0;
;
	.dbg	line, "realloc.c", 60
	ldx     #$00
	txa
	jmp     L0001
;
; size += HEAP_ADMIN_SPACE;
;
	.dbg	line, "realloc.c", 64
L0006:	dey
	ldx     #$00
	lda     #$04
	jsr     addeqysp
;
; if (size < sizeof (struct freeblock)) {
;
	.dbg	line, "realloc.c", 65
	ldy     #$0B
	lda     (sp),y
	bne     L0010
	dey
	lda     (sp),y
	cmp     #$06
L0010:	bcs     L000E
;
; size = sizeof (struct freeblock);
;
	.dbg	line, "realloc.c", 66
	ldy     #$0A
	lda     #$06
	sta     (sp),y
	lda     #$00
	iny
	sta     (sp),y
;
; b = (((struct usedblock*) block) - 1)->start;
;
	.dbg	line, "realloc.c", 74
L000E:	ldy     #$0D
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sec
	sbc     #$04
	bcs     L0017
	dex
L0017:	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$08
	jsr     staxysp
;
; oldsize = b->size;
;
	.dbg	line, "realloc.c", 75
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (ptr1),y
	tax
	lda     (ptr1)
	ldy     #$04
	jsr     staxysp
;
; diff = size - oldsize;
;
	.dbg	line, "realloc.c", 78
	ldy     #$0B
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sec
	ldy     #$04
	sbc     (sp),y
	pha
	txa
	iny
	sbc     (sp),y
	tax
	pla
	jsr     stax0sp
;
; if (((unsigned) b) + oldsize == ((unsigned) _heapptr)) {
;
	.dbg	line, "realloc.c", 81
	ldy     #$08
	lda     (sp),y
	ldy     #$04
	clc
	adc     (sp),y
	pha
	ldy     #$09
	lda     (sp),y
	ldy     #$05
	adc     (sp),y
	tax
	pla
	cpx     __heapptr+1
	bne     L0023
	cmp     __heapptr
	bne     L0023
;
; newhptr = ((unsigned) _heapptr) + diff;
;
	.dbg	line, "realloc.c", 83
	ldy     #$01
	lda     (sp),y
	tax
	lda     (sp)
	clc
	adc     __heapptr
	pha
	txa
	adc     __heapptr+1
	tax
	pla
	iny
	jsr     staxysp
;
; if (newhptr <= ((unsigned) _heapend)) {
;
	.dbg	line, "realloc.c", 84
	sec
	sbc     __heapend
	sta     tmp1
	txa
	sbc     __heapend+1
	ora     tmp1
	beq     L003F
	bcs     L0023
;
; _heapptr = (unsigned*) newhptr;
;
	.dbg	line, "realloc.c", 86
L003F:	ldy     #$03
	lda     (sp),y
	sta     __heapptr+1
	dey
	lda     (sp),y
	sta     __heapptr
;
; b->size = size;
;
	.dbg	line, "realloc.c", 87
	ldy     #$09
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$0B
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     (ptr1)
	ldy     #$01
	txa
	sta     (ptr1),y
;
; b->start = b;
;
	.dbg	line, "realloc.c", 88
	ldy     #$09
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
;
; return block;
;
	.dbg	line, "realloc.c", 89
	ldy     #$0D
	bra     L0040
;
; if (newblock = malloc (size)) {
;
	.dbg	line, "realloc.c", 96
L0023:	ldy     #$0B
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _malloc
	ldy     #$06
	jsr     staxysp
	stx     tmp1
	ora     tmp1
	beq     L002D
;
; oldsize -= HEAP_ADMIN_SPACE;
;
	.dbg	line, "realloc.c", 99
	ldx     #$00
	lda     #$04
	tay
	jsr     subeqysp
;
; if (size > oldsize) {
;
	.dbg	line, "realloc.c", 104
	ldy     #$0B
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sec
	ldy     #$04
	sbc     (sp),y
	sta     tmp1
	txa
	iny
	sbc     (sp),y
	ora     tmp1
	bcc     L0033
	beq     L0033
;
; size = oldsize;
;
	.dbg	line, "realloc.c", 105
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$0A
	jsr     staxysp
;
; memcpy (newblock, block, size);
;
	.dbg	line, "realloc.c", 109
L0033:	ldy     #$09
	jsr     pushwysp
	ldy     #$11
	jsr     pushwysp
	ldy     #$0F
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _memcpy
;
; free (block);
;
	.dbg	line, "realloc.c", 110
	ldy     #$0D
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _free
;
; return newblock;
;
	.dbg	line, "realloc.c", 112
L002D:	ldy     #$07
L0040:	lda     (sp),y
	tax
	dey
	lda     (sp),y
;
; }
;
	.dbg	line, "realloc.c", 113
L0001:	ldy     #$0E
	jmp     addysp
	.dbg	line

.endproc

