;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"65816"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "fgetc.c", 1059, 1084482831
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stdio.h", 5951, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stddef.h", 2972, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stdarg.h", 2817, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/unistd.h", 4203, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/errno.h", 4695, 1344797532
	.dbg		file, "_file.h", 742, 1084367796
	.dbg		sym, "read", "00", extern, "_read"
	.export		_fgetc
	.import		_read

; ---------------------------------------------------------------
; int __near__ __fastcall__ fgetc (register __near__ struct _FILE*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fgetc: near

	.dbg	func, "fgetc", "00", extern, "_fgetc"
	.dbg	sym, "f", "00", register, "regbank", 4
	.dbg	sym, "c", "00", auto, -1

.segment	"CODE"

;
; {
;
	.dbg	line, "fgetc.c", 24
	jsr     pushax
	ldy     #$00
	ldx     #$04
	jsr     regswap2
;
; if ((f->f_flags & _FOPEN) == 0 || (f->f_flags & (_FERROR | _FEOF)) != 0) {
;
	.dbg	line, "fgetc.c", 28
	jsr     decsp1
	ldy     #$01
	lda     (regbank+4),y
	and     #$01
	beq     L0026
	lda     (regbank+4),y
	and     #$06
	beq     L0028
;
; return EOF;
;
	.dbg	line, "fgetc.c", 29
L0026:	ldx     #$FF
	txa
	bra     L0017
;
; if (f->f_flags & _FPUSHBACK) {
;
	.dbg	line, "fgetc.c", 33
L0028:	lda     (regbank+4),y
	and     #$08
	beq     L000C
;
; f->f_flags &= ~_FPUSHBACK;
;
	.dbg	line, "fgetc.c", 34
	lda     (regbank+4),y
	and     #$F7
	sta     (regbank+4),y
;
; return f->f_pushback;
;
	.dbg	line, "fgetc.c", 35
	iny
	ldx     #$00
	lda     (regbank+4),y
	bra     L0017
;
; switch (read (f->f_fd, &c, 1)) {
;
	.dbg	line, "fgetc.c", 39
L000C:	jsr     decsp4
	lda     (regbank+4)
	iny
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     sp
	ldx     sp+1
	clc
	adc     #$04
	bcc     L0014
	inx
L0014:	sta     (sp)
	ldy     #$01
	txa
	sta     (sp),y
	ldx     #$00
	tya
	jsr     _read
;
; }
;
	.dbg	line, "fgetc.c", 55
	cpx     #$00
	bne     L0024
	cmp     #$00
	beq     L001E
	bra     L0022
L0024:	cpx     #$FF
	bne     L0022
	cmp     #$FF
	bne     L0022
;
; f->f_flags |= _FERROR;
;
	.dbg	line, "fgetc.c", 43
	ldy     #$01
	lda     (regbank+4),y
	ora     #$04
	sta     (regbank+4),y
;
; return EOF;
;
	.dbg	line, "fgetc.c", 44
	txa
	bra     L0017
;
; f->f_flags |= _FEOF;
;
	.dbg	line, "fgetc.c", 48
L001E:	ldy     #$01
	lda     (regbank+4),y
	ora     #$02
	sta     (regbank+4),y
;
; return EOF;
;
	.dbg	line, "fgetc.c", 49
	dex
	txa
	bra     L0017
;
; return c;
;
	.dbg	line, "fgetc.c", 53
L0022:	lda     (sp)
	ldx     #$00
;
; }
;
	.dbg	line, "fgetc.c", 56
L0017:	pha
	ldy     #$01
	lda     (sp),y
	sta     regbank+4
	iny
	lda     (sp),y
	sta     regbank+5
	pla
	jmp     incsp3
	.dbg	line

.endproc

