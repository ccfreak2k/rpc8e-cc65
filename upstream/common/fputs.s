;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"65816"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "fputs.c", 468, 1055441303
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stdio.h", 5951, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stddef.h", 2972, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stdarg.h", 2817, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/string.h", 4883, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/unistd.h", 4203, 1344797532
	.dbg		file, "_file.h", 742, 1084367796
	.dbg		sym, "strlen", "00", extern, "_strlen"
	.dbg		sym, "write", "00", extern, "_write"
	.export		_fputs
	.import		_strlen
	.import		_write

; ---------------------------------------------------------------
; int __near__ __fastcall__ fputs (__near__ const unsigned char*, __near__ struct _FILE*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fputs: near

	.dbg	func, "fputs", "00", extern, "_fputs"
	.dbg	sym, "s", "00", auto, 2
	.dbg	sym, "f", "00", auto, 0

.segment	"CODE"

;
; {
;
	.dbg	line, "fputs.c", 17
	jsr     pushax
;
; if ((f->f_flags & _FOPEN) == 0 || (f->f_flags & (_FERROR | _FEOF)) != 0) {
;
	.dbg	line, "fputs.c", 19
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	lda     (sp)
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	and     #$01
	beq     L0011
	lda     (sp),y
	sta     ptr1+1
	lda     (sp)
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	and     #$06
	beq     L0003
;
; return EOF;
;
	.dbg	line, "fputs.c", 20
L0011:	ldx     #$FF
	txa
	jmp     incsp4
;
; return write (f->f_fd, s, strlen (s));
;
	.dbg	line, "fputs.c", 24
L0003:	jsr     decsp4
	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     (ptr1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	ldy     #$07
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     (sp)
	ldy     #$01
	txa
	sta     (sp),y
	ldy     #$07
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _strlen
	jsr     _write
;
; }
;
	.dbg	line, "fputs.c", 25
	jmp     incsp4
	.dbg	line

.endproc

