;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"65816"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "qsort.c", 1290, 1067464759
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stdlib.h", 5606, 1344797532
	.dbg		sym, "_swap", "00", extern, "__swap"
	.export		_qsort
	.import		__swap

; ---------------------------------------------------------------
; void __near__ __fastcall__ qsort (__near__ void*, unsigned int, unsigned int, __near__ __near__ function returning int*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_qsort: near

	.dbg	func, "qsort", "00", extern, "_qsort"
	.dbg	sym, "base", "00", auto, 6
	.dbg	sym, "nmemb", "00", auto, 4
	.dbg	sym, "size", "00", auto, 2
	.dbg	sym, "compare", "00", auto, 0

.segment	"CODE"

;
; {
;
	.dbg	line, "qsort.c", 59
	jsr     pushax
;
; if (nmemb > 1) {
;
	.dbg	line, "qsort.c", 60
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$02
	txa
	sbc     #$00
	bcc     L0049
;
; QuickSort (base, 0, (nmemb-1) * size, size, compare);
;
	.dbg	line, "qsort.c", 61
	ldy     #$0A
	jsr     subysp
	ldy     #$11
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$08
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	lda     #$00
	ldy     #$06
	sta     (sp),y
	iny
	sta     (sp),y
	ldy     #$0F
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sec
	sbc     #$01
	bcs     L0050
	dex
L0050:	jsr     pushax
	ldy     #$0F
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     tosumulax
	ldy     #$04
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$0D
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$0B
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     (sp)
	ldy     #$01
	txa
	sta     (sp),y
	jsr     _QuickSort
;
; }
;
	.dbg	line, "qsort.c", 63
L0049:	jmp     incsp8
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ QuickSort (__near__ void*, int, int, unsigned int, __near__ __near__ function returning int*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_QuickSort: near

	.dbg	func, "QuickSort", "00", static, "_QuickSort"
	.dbg	sym, "Base", "00", auto, 8
	.dbg	sym, "Lo", "00", auto, 6
	.dbg	sym, "Hi", "00", auto, 4
	.dbg	sym, "Size", "00", auto, 2
	.dbg	sym, "Compare", "00", auto, 0
	.dbg	sym, "I", "00", auto, -2
	.dbg	sym, "J", "00", auto, -4
	.dbg	sym, "B", "00", auto, -6

.segment	"CODE"

;
; unsigned char* B = Base;
;
	.dbg	line, "qsort.c", 22
	jsr     decsp4
	ldy     #$0F
	jsr     pushwysp
;
; while (Hi > Lo) {
;
	.dbg	line, "qsort.c", 25
	jmp     L0005
;
; I = Lo + Size;
;
	.dbg	line, "qsort.c", 26
L0003:	ldy     #$0C
	lda     (sp),y
	ldy     #$08
	clc
	adc     (sp),y
	pha
	ldy     #$0D
	lda     (sp),y
	ldy     #$09
	adc     (sp),y
	tax
	pla
	ldy     #$04
	jsr     staxysp
;
; J = Hi;
;
	.dbg	line, "qsort.c", 27
	ldy     #$0B
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	jsr     staxysp
;
; while (I <= J) {
;
	.dbg	line, "qsort.c", 28
	jmp     L000D
;
; I += Size;
;
	.dbg	line, "qsort.c", 30
L000F:	ldy     #$08
	lda     (sp),y
	ldy     #$04
	clc
	adc     (sp),y
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	ldy     #$05
	adc     (sp),y
	sta     (sp),y
;
; while (I <= J && Compare (B + Lo, B + I) >= 0) {
;
	.dbg	line, "qsort.c", 29
L0011:	ldy     #$07
	jsr     pushwysp
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     tosicmp
	beq     L0057
	bpl     L001B
L0057:	ldy     #$09
	jsr     pushwysp
	jsr     decsp4
	ldy     #$06
	lda     (sp),y
	ldy     #$12
	clc
	adc     (sp),y
	pha
	ldy     #$07
	lda     (sp),y
	ldy     #$13
	adc     (sp),y
	tax
	pla
	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$06
	lda     (sp),y
	ldy     #$0A
	clc
	adc     (sp),y
	pha
	ldy     #$07
	lda     (sp),y
	ldy     #$0B
	adc     (sp),y
	tax
	pla
	sta     (sp)
	ldy     #$01
	txa
	sta     (sp),y
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     callax
	jsr     incsp2
	txa
	bpl     L000F
	bra     L001B
;
; J -= Size;
;
	.dbg	line, "qsort.c", 33
L0019:	ldy     #$09
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	jsr     subeqysp
;
; while (I <= J && Compare (B + Lo, B + J) < 0) {
;
	.dbg	line, "qsort.c", 32
L001B:	ldy     #$07
	jsr     pushwysp
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     tosicmp
	beq     L0058
	bpl     L0055
L0058:	ldy     #$09
	jsr     pushwysp
	jsr     decsp4
	ldy     #$06
	lda     (sp),y
	ldy     #$12
	clc
	adc     (sp),y
	pha
	ldy     #$07
	lda     (sp),y
	ldy     #$13
	adc     (sp),y
	tax
	pla
	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$06
	lda     (sp),y
	ldy     #$08
	clc
	adc     (sp),y
	pha
	dey
	lda     (sp),y
	ldy     #$09
	adc     (sp),y
	tax
	pla
	sta     (sp)
	ldy     #$01
	txa
	sta     (sp),y
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     callax
	jsr     incsp2
	cpx     #$80
	bcs     L0019
;
; if (I <= J) {
;
	.dbg	line, "qsort.c", 35
L0055:	ldy     #$07
	jsr     pushwysp
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     tosicmp
	beq     L0059
	bpl     L000D
;
; _swap (B + I, B + J, Size);
;
	.dbg	line, "qsort.c", 36
L0059:	jsr     decsp4
	ldy     #$04
	lda     (sp),y
	ldy     #$08
	clc
	adc     (sp),y
	pha
	ldy     #$05
	lda     (sp),y
	ldy     #$09
	adc     (sp),y
	tax
	pla
	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	iny
	lda     (sp),y
	ldy     #$06
	clc
	adc     (sp),y
	pha
	dey
	lda     (sp),y
	ldy     #$07
	adc     (sp),y
	tax
	pla
	sta     (sp)
	ldy     #$01
	txa
	sta     (sp),y
	ldy     #$0D
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     __swap
;
; I += Size;
;
	.dbg	line, "qsort.c", 37
	ldy     #$08
	lda     (sp),y
	ldy     #$04
	clc
	adc     (sp),y
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	ldy     #$05
	adc     (sp),y
	sta     (sp),y
;
; J -= Size;
;
	.dbg	line, "qsort.c", 38
	ldy     #$09
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	jsr     subeqysp
;
; while (I <= J) {
;
	.dbg	line, "qsort.c", 28
L000D:	ldy     #$07
	jsr     pushwysp
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     tosicmp
	jmi     L0011
	jeq     L0011
;
; if (J != Lo) {
;
	.dbg	line, "qsort.c", 41
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$0C
	cmp     (sp),y
	bne     L005C
	txa
	iny
	cmp     (sp),y
	beq     L002D
;
; _swap (B + J, B + Lo, Size);
;
	.dbg	line, "qsort.c", 42
L005C:	jsr     decsp4
	ldy     #$04
	lda     (sp),y
	ldy     #$06
	clc
	adc     (sp),y
	pha
	dey
	lda     (sp),y
	ldy     #$07
	adc     (sp),y
	tax
	pla
	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	iny
	lda     (sp),y
	ldy     #$10
	clc
	adc     (sp),y
	pha
	ldy     #$05
	lda     (sp),y
	ldy     #$11
	adc     (sp),y
	tax
	pla
	sta     (sp)
	ldy     #$01
	txa
	sta     (sp),y
	ldy     #$0D
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     __swap
;
; if (((unsigned) J) * 2 > (Hi + Lo)) {
;
	.dbg	line, "qsort.c", 44
L002D:	ldy     #$03
	lda     (sp),y
	sta     tmp1
	dey
	lda     (sp),y
	asl     a
	rol     tmp1
	ldx     tmp1
	jsr     pushax
	ldy     #$0C
	lda     (sp),y
	ldy     #$0E
	clc
	adc     (sp),y
	pha
	dey
	lda     (sp),y
	ldy     #$0F
	adc     (sp),y
	tax
	pla
	jsr     tosicmp
	bcc     L0033
	beq     L0033
;
; QuickSort (Base, J + Size, Hi, Size, Compare);
;
	.dbg	line, "qsort.c", 45
	ldy     #$0A
	jsr     subysp
	ldy     #$19
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$08
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$0C
	lda     (sp),y
	ldy     #$12
	clc
	adc     (sp),y
	pha
	ldy     #$0D
	lda     (sp),y
	ldy     #$13
	adc     (sp),y
	tax
	pla
	ldy     #$06
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$15
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$04
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$13
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     (sp)
	ldy     #$01
	txa
	sta     (sp),y
	jsr     _QuickSort
;
; Hi = J - Size;
;
	.dbg	line, "qsort.c", 46
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sec
	ldy     #$08
	sbc     (sp),y
	pha
	txa
	iny
	sbc     (sp),y
	tax
	pla
	iny
;
; } else {
;
	.dbg	line, "qsort.c", 47
	bra     L0056
;
; QuickSort (Base, Lo, J - Size, Size, Compare);
;
	.dbg	line, "qsort.c", 48
L0033:	ldy     #$0A
	jsr     subysp
	ldy     #$19
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$08
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$17
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$06
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$0D
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sec
	ldy     #$12
	sbc     (sp),y
	pha
	txa
	iny
	sbc     (sp),y
	tax
	pla
	ldy     #$04
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$13
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$11
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     (sp)
	ldy     #$01
	txa
	sta     (sp),y
	jsr     _QuickSort
;
; Lo = J + Size;
;
	.dbg	line, "qsort.c", 49
	ldy     #$02
	lda     (sp),y
	ldy     #$08
	clc
	adc     (sp),y
	pha
	ldy     #$03
	lda     (sp),y
	ldy     #$09
	adc     (sp),y
	tax
	pla
	ldy     #$0C
L0056:	jsr     staxysp
;
; while (Hi > Lo) {
;
	.dbg	line, "qsort.c", 25
L0005:	ldy     #$0D
	jsr     pushwysp
	ldy     #$0F
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     tosicmp
	beq     L005A
	jpl     L0003
;
; }
;
	.dbg	line, "qsort.c", 52
L005A:	ldy     #$10
	jmp     addysp
	.dbg	line

.endproc

