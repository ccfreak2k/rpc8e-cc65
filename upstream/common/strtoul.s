;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"65816"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "strtoul.c", 2843, 1253051125
	.dbg		file, "/Users/steven/bin/lib/cc65/include/limits.h", 2978, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/ctype.h", 7921, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/errno.h", 4695, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stdlib.h", 5606, 1344797532
	.dbg		sym, "_ctype", "00", extern, "__ctype"
	.dbg		sym, "_errno", "00", extern, "__errno"
	.import		__ctype
	.import		__errno
	.export		_strtoul

; ---------------------------------------------------------------
; unsigned long __near__ __fastcall__ strtoul (__near__ const unsigned char*, __near__ __near__ unsigned char**, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_strtoul: near

	.dbg	func, "strtoul", "00", extern, "_strtoul"
	.dbg	sym, "nptr", "00", auto, 4
	.dbg	sym, "endptr", "00", auto, 2
	.dbg	sym, "base", "00", auto, 0
	.dbg	sym, "S", "00", register, "regbank", 4
	.dbg	sym, "Val", "00", auto, -6
	.dbg	sym, "Minus", "00", auto, -7
	.dbg	sym, "Ovf", "00", auto, -8
	.dbg	sym, "CvtCount", "00", auto, -10
	.dbg	sym, "DigitVal", "00", auto, -11
	.dbg	sym, "MaxVal", "00", auto, -15
	.dbg	sym, "MaxDigit", "00", auto, -16

.segment	"CODE"

;
; {
;
	.dbg	line, "strtoul.c", 10
	jsr     pushax
;
; register const char* S          = nptr;
;
	.dbg	line, "strtoul.c", 11
	lda     regbank+4
	ldx     regbank+5
	jsr     pushax
	ldy     #$07
	lda     (sp),y
	sta     regbank+4+1
	dey
	lda     (sp),y
	sta     regbank+4
;
; unsigned long        Val        = 0;
;
	.dbg	line, "strtoul.c", 12
	jsr     pushl0
;
; unsigned char        Minus      = 0;
;
	.dbg	line, "strtoul.c", 13
	jsr     pusha
;
; unsigned char        Ovf        = 0;
;
	.dbg	line, "strtoul.c", 14
	jsr     pusha
;
; unsigned             CvtCount   = 0;
;
	.dbg	line, "strtoul.c", 15
	jsr     push0
;
; while (isspace (*S)) {
;
	.dbg	line, "strtoul.c", 22
	jsr     decsp6
	bra     L000A
;
; ++S;
;
	.dbg	line, "strtoul.c", 23
L0008:	inc     regbank+4
	bne     L000A
	inc     regbank+4+1
;
; while (isspace (*S)) {
;
	.dbg	line, "strtoul.c", 22
L000A:	lda     (regbank+4)
	tay
	lda     __ctype,y
	and     #$60
	bne     L0008
;
; switch (*S) {
;
	.dbg	line, "strtoul.c", 27
	lda     (regbank+4)
;
; }
;
	.dbg	line, "strtoul.c", 33
	cmp     #$2B
	beq     L0022
	cmp     #$2D
	bne     L001C
;
; Minus = 1;
;
	.dbg	line, "strtoul.c", 29
	lda     #$01
	ldy     #$09
	sta     (sp),y
;
; ++S;
;
	.dbg	line, "strtoul.c", 32
L0022:	inc     regbank+4
	bne     L001C
	inc     regbank+4+1
;
; if (base == 0) {
;
	.dbg	line, "strtoul.c", 38
L001C:	ldy     #$10
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L00B0
;
; if (*S == '0') {
;
	.dbg	line, "strtoul.c", 39
	lda     (regbank+4)
	cmp     #$30
	bne     L00AF
;
; ++S;
;
	.dbg	line, "strtoul.c", 40
	inc     regbank+4
	bne     L002B
	inc     regbank+4+1
;
; if (*S == 'x' || *S == 'X') {
;
	.dbg	line, "strtoul.c", 41
L002B:	lda     (regbank+4)
	cmp     #$78
	beq     L00AD
	cmp     #$58
	bne     L00AE
;
; ++S;
;
	.dbg	line, "strtoul.c", 42
L00AD:	inc     regbank+4
	bne     L0030
	inc     regbank+4+1
;
; base = 16;
;
	.dbg	line, "strtoul.c", 43
L0030:	dey
	tya
;
; } else {
;
	.dbg	line, "strtoul.c", 44
	bra     L00C7
;
; base = 8;
;
	.dbg	line, "strtoul.c", 45
L00AE:	dey
	lda     #$08
	sta     (sp),y
	lda     #$00
	iny
	sta     (sp),y
;
; } else {
;
	.dbg	line, "strtoul.c", 47
	bra     L003A
;
; base = 10;
;
	.dbg	line, "strtoul.c", 48
L00AF:	dey
	lda     #$0A
L00C7:	sta     (sp),y
	lda     #$00
	iny
	sta     (sp),y
;
; } else if (base == 16 && *S == '0' && (S[1] == 'x' || S[1] == 'X')) {
;
	.dbg	line, "strtoul.c", 50
	bra     L003A
L00B0:	lda     (sp),y
	bne     L003A
	dey
	lda     (sp),y
	cmp     #$10
	bne     L003A
	lda     (regbank+4)
	cmp     #$30
	bne     L003A
	ldy     #$01
	lda     (regbank+4),y
	cmp     #$78
	beq     L00B5
	cmp     #$58
	bne     L003A
;
; S += 2;
;
	.dbg	line, "strtoul.c", 51
L00B5:	lda     #$02
	clc
	adc     regbank+4
	sta     regbank+4
	bcc     L003A
	inc     regbank+4+1
;
; MaxDigit = ULONG_MAX % base;
;
	.dbg	line, "strtoul.c", 57
L003A:	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jsr     pusheax
	ldy     #$15
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     axlong
	jsr     tosumodeax
	sta     (sp)
;
; MaxVal   = ULONG_MAX / base;
;
	.dbg	line, "strtoul.c", 58
	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	jsr     pusheax
	ldy     #$15
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     axlong
	jsr     tosudiveax
	ldy     #$01
	jsr     steaxysp
;
; if (isdigit (*S)) {
;
	.dbg	line, "strtoul.c", 64
L004A:	lda     (regbank+4)
	tay
	lda     __ctype,y
	and     #$04
	beq     L004E
;
; DigitVal = *S - '0';
;
	.dbg	line, "strtoul.c", 65
	ldx     #$00
	lda     (regbank+4)
	sec
	sbc     #$30
;
; } else if (isupper (*S)) {
;
	.dbg	line, "strtoul.c", 66
	bra     L00C5
L004E:	lda     (regbank+4)
	tay
	lda     __ctype,y
	and     #$02
	beq     L005F
;
; DigitVal = *S - ('A' - 10);
;
	.dbg	line, "strtoul.c", 67
	ldx     #$00
	lda     (regbank+4)
	sec
	sbc     #$37
;
; } else if (islower (*S)) {
;
	.dbg	line, "strtoul.c", 68
	bra     L00C5
L005F:	lda     (regbank+4)
	tay
	lda     __ctype,y
	and     #$01
	jeq     L004B
;
; DigitVal = *S - ('a' - 10);
;
	.dbg	line, "strtoul.c", 69
	ldx     #$00
	lda     (regbank+4)
	sec
	sbc     #$57
L00C5:	ldy     #$05
	sta     (sp),y
;
; if (DigitVal >= base) {
;
	.dbg	line, "strtoul.c", 76
	ldy     #$10
	cmp     (sp),y
	txa
	iny
	sbc     (sp),y
;
; break;
;
	.dbg	line, "strtoul.c", 77
	bcs     L004B
;
; if (Val > MaxVal || (Val == MaxVal && DigitVal > MaxDigit)) {
;
	.dbg	line, "strtoul.c", 81
	ldy     #$0D
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$08
	jsr     ldeaxysp
	jsr     tosugteax
	bne     L0086
	ldy     #$0D
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$08
	jsr     ldeaxysp
	jsr     toseqeax
	beq     L0085
	ldy     #$05
	lda     (sp),y
	sec
	sbc     (sp)
	sta     tmp1
	lda     tmp1
	beq     L0085
	bcc     L0085
;
; Ovf = 1;
;
	.dbg	line, "strtoul.c", 82
L0086:	lda     #$01
	ldy     #$08
	sta     (sp),y
;
; if (Ovf == 0) {
;
	.dbg	line, "strtoul.c", 86
L0085:	ldy     #$08
	lda     (sp),y
	bne     L008D
;
; Val = (Val * base) + DigitVal;
;
	.dbg	line, "strtoul.c", 87
	ldy     #$0D
	jsr     ldeaxysp
	jsr     pusheax
	ldy     #$15
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     axlong
	jsr     tosumuleax
	jsr     pusheax
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     tosadd0ax
	ldy     #$0A
	jsr     steaxysp
;
; ++CvtCount;
;
	.dbg	line, "strtoul.c", 88
	ldy     #$06
	ldx     #$00
	lda     #$01
	jsr     addeqysp
;
; ++S;
;
	.dbg	line, "strtoul.c", 92
L008D:	inc     regbank+4
	jne     L004A
	inc     regbank+4+1
;
; while (1) {
;
	.dbg	line, "strtoul.c", 61
	jmp     L004A
;
; if (endptr) {
;
	.dbg	line, "strtoul.c", 98
L004B:	ldy     #$13
	lda     (sp),y
	dey
	ora     (sp),y
	beq     L009D
;
; if (CvtCount > 0) {
;
	.dbg	line, "strtoul.c", 99
	ldy     #$06
	lda     (sp),y
	iny
	ora     (sp),y
	beq     L0097
;
; *endptr = (char*) S - 1;
;
	.dbg	line, "strtoul.c", 100
	ldy     #$13
	lda     (sp),y
	sta     sreg+1
	dey
	lda     (sp),y
	sta     sreg
	lda     regbank+4
	ldx     regbank+4+1
	sec
	sbc     #$01
	bcs     L00CA
	dex
;
; } else {
;
	.dbg	line, "strtoul.c", 101
	bra     L00CA
;
; *endptr = (char*) nptr;
;
	.dbg	line, "strtoul.c", 102
L0097:	ldy     #$13
	lda     (sp),y
	sta     sreg+1
	dey
	lda     (sp),y
	sta     sreg
	ldy     #$15
	lda     (sp),y
	tax
	dey
	lda     (sp),y
L00CA:	sta     (sreg)
	ldy     #$01
	txa
	sta     (sreg),y
;
; if (Ovf) {
;
	.dbg	line, "strtoul.c", 107
L009D:	ldy     #$08
	lda     (sp),y
	beq     L00A0
;
; errno = ERANGE;
;
	.dbg	line, "strtoul.c", 108
	lda     #$0F
	sta     __errno
	stz     __errno+1
;
; return ULONG_MAX;
;
	.dbg	line, "strtoul.c", 109
	ldx     #$FF
	stx     sreg
	stx     sreg+1
	txa
	bra     L00A8
;
; if (Minus) {
;
	.dbg	line, "strtoul.c", 113
L00A0:	iny
	lda     (sp),y
	beq     L00A5
;
; return (unsigned long) -(long)Val;
;
	.dbg	line, "strtoul.c", 114
	ldy     #$0D
	jsr     ldeaxysp
	jsr     negeax
	bra     L00A8
;
; return Val;
;
	.dbg	line, "strtoul.c", 116
L00A5:	ldy     #$0D
	jsr     ldeaxysp
;
; }
;
	.dbg	line, "strtoul.c", 118
L00A8:	pha
	ldy     #$0E
	lda     (sp),y
	sta     regbank+4
	iny
	lda     (sp),y
	sta     regbank+5
	pla
	ldy     #$16
	jmp     addysp
	.dbg	line

.endproc

