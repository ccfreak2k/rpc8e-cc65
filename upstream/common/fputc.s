;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"65816"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "fputc.c", 751, 1068141847
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stdio.h", 5951, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stddef.h", 2972, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/stdarg.h", 2817, 1344797532
	.dbg		file, "/Users/steven/bin/lib/cc65/include/unistd.h", 4203, 1344797532
	.dbg		file, "_file.h", 742, 1084367796
	.dbg		sym, "write", "00", extern, "_write"
	.export		_fputc
	.import		_write

; ---------------------------------------------------------------
; int __near__ __fastcall__ fputc (int, __near__ struct _FILE*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fputc: near

	.dbg	func, "fputc", "00", extern, "_fputc"
	.dbg	sym, "c", "00", auto, 2
	.dbg	sym, "f", "00", auto, 0

.segment	"CODE"

;
; {
;
	.dbg	line, "fputc.c", 22
	jsr     pushax
;
; if ((f->f_flags & _FOPEN) == 0 || (f->f_flags & (_FERROR | _FEOF)) != 0) {
;
	.dbg	line, "fputc.c", 24
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	lda     (sp)
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	and     #$01
	beq     L0017
	lda     (sp),y
	sta     ptr1+1
	lda     (sp)
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	and     #$06
	beq     L0003
;
; return EOF;
;
	.dbg	line, "fputc.c", 25
L0017:	ldx     #$FF
	txa
	jmp     incsp4
;
; if (write (f->f_fd, &c, 1) <= 0) {
;
	.dbg	line, "fputc.c", 29
L0003:	jsr     decsp4
	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	lda     (ptr1)
	ldy     #$02
	sta     (sp),y
	iny
	lda     #$00
	sta     (sp),y
	lda     sp
	ldx     sp+1
	clc
	adc     #$06
	bcc     L0010
	inx
L0010:	sta     (sp)
	ldy     #$01
	txa
	sta     (sp),y
	ldx     #$00
	tya
	jsr     _write
	cmp     #$01
	txa
	sbc     #$00
	bvc     L0012
	eor     #$80
L0012:	bpl     L000C
;
; f->f_flags |= _FERROR;
;
	.dbg	line, "fputc.c", 31
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	lda     (sp)
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	ora     #$04
	sta     (ptr1),y
;
; return EOF;
;
	.dbg	line, "fputc.c", 32
	ldx     #$FF
	txa
	jmp     incsp4
;
; return c & 0xFF;
;
	.dbg	line, "fputc.c", 36
L000C:	ldy     #$02
	lda     (sp),y
	ldx     #$00
;
; }
;
	.dbg	line, "fputc.c", 37
	jmp     incsp4
	.dbg	line

.endproc

